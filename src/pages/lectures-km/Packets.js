import React from 'react';

function Packets() {
  return (
    <div>
      <h1>Концепции на компютърните комуникации</h1>
      <h2>Представяне на информацията в компютрите</h2>
      <p>
        Информацията в компютрите се представя и обработва в двоичен код.
        Компютрите работят в двоична бройна система, при която цифрите са две –
        нула и единица. Всички команди и данни се записват като комбинации от
        единици и нули. Двоичното представяне е удобно и за комуникацията между
        компютрите. <br />
        Компютрите са електронни машини и те работят с електрически импулси.
        Компютрите използват цифрови сигнали. Наличието на сигнал се кодира като
        1, а липсата на сигнал – като 0.
      </p>
      <h2>Използване на пакети</h2>
      <p>
        При комуникацията между компютрите се обменят данни, които в много от
        случаите могат да бъдат големи като обем. Изпращането на един текстов
        файл например, като непрекъснат поток ще доведе до излишно натоварване
        на мрежата. През това време останалите компютри трябва да изчакат
        файловия трансфер да приключи. За да не се получава това, големите
        файлове трябва да бъдат разделени на по-малки части, преди да бъдат
        изпратени по мрежата. <br />
        Малките парчета на които се разделят компютърните данни за предаване по
        мрежата се наричат пакети.
      </p>
      <ul style={{ listStyle: 'inside' }}>
        Разделянето на данните на пакети има следните предимства:
        <li>
          По време на предвижването си по мрежата отделните пакети могат да
          преминат по различен маршрут от мрежата. По този начин, ако един път
          се препълни или забави, останалата част от пакетите могат да минат и
          по друг маршрут.
        </li>
        <li>
          Ако мрежовата връзка се прекъсне по време на изпращане на даден файл
          или някой от пакетите се загуби, то ще трябва да се изпратят отново
          само липсващите пакети, а не целият файл.
        </li>
      </ul>
      <p>
        Ако при изпращане на файлове данните се разделят на отделни парчета, то
        при получаването им от съответния компютър до който са адресирани, те
        трябва да бъдат подредени и сглобени, така че да се получи файл, който е
        абсолютно еднакъв с изпратения. За да се случи това, към отделните
        парчета с информация се добавя служебна информация: <br />
        Към началото на пакета, преди оригиналните данни, се добавя информация
        под формата на хедъри. Хедърите съдържат адресна информация, с помощта
        на която всеки пакет достига до местоназначението си. Те съдържат и
        информация за последователността на пакетите, така че всеки пакет да
        може да бъде подреден правилно, преди да се сглоби целия файл.
        <br />
        Към края на пакета, след оригиналните данни, се добавя завършваща
        информация или трейлър (trailer information). Често тя включва
        информация за проверка за грешки (CRC – Critical Redundancy Check).
      </p>
      <center>
        <img
          style={{ width: '32rem' }}
          src="https://images.ukdissertations.com/32/0232323.004.jpg"
        ></img>
      </center>
      <h2>MTU</h2>
      <p>
        Големината на един пакет може да бъде различна. В Ethernet II (който
        използваме в TCP/IP мрежите) пакетите могат да съдържат до 1500 байта
        данни, като при това общата дължина на пакета е до 1518 байта. В
        Интернет може да има устройства, които работят с по-малки дължини на
        пакета. Например, в протокола PPPoE максималната дължина на пакета е
        1492 байта. Затова е въведена единицата MTU (Maximum Transmission Unit).
        Това е максималната дължина на данните, които могат да се пренесат през
        комуникационно съединение (или комуникационно устройство) без разделяне
        (фрагментиране).
      </p>
      <h2>Многослоен процес на комуникация</h2>
      <p>
        Процесът на мрежова комуникация е сложен. Информацията, която искаме да
        предадем по мрежата до друг компютър, преди да постъпи в преносната
        среда се преобразува до поредица от електрически импулси, светлинни
        импулси или радиосигнал. При достигане на компютъра-получател се
        извършва обратното преобразувание. Този процес се извършва на няколко
        етапа. Разработчиците на хардуер и софтуер са стигнали до извода, че
        най-ефикасният начин за мрежова комуникация е многослойния модел.
        <br />
        Отделните етапи от комуникацията се обозначават като слоеве. Всеки слой
        извършва конкретна задача. Така сложният процес на комуникация се свежда
        до поредица от елементарни действия. Например, при изпращане на данните
        по мрежата елементарните действия се свеждат до: взаимодействие с
        потребителската програма, компресиране на данните, изграждане на пакети,
        проверка за правилно адресиране и т.н. Многослойният модел е по-добрият
        вариант и при диагностицирането и отстраняването на мрежови проблеми.
        <br />
        Взаимодействието между отделните слоеве на многослойния модел се
        осигурява от протоколите, като за всеки слой има различни протоколи.
      </p>
    </div>
  );
}

export default Packets;
